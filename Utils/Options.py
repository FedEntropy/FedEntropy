import argparsedef args_parser():    parser = argparse.ArgumentParser()    parser.add_argument('--epochs', type=int, default=1000, help="rounds of training")    parser.add_argument('--num_users', type=int, default=100, help="number of users: K")    parser.add_argument('--frac', type=float, default=0.1, help="the fraction of clients: C")    parser.add_argument('--local_ep', type=int, default=5, help="the number of local epochs: E")    parser.add_argument('--local_bs', type=int, default=10, help="local batch size: B")    parser.add_argument('--bs', type=int, default=128, help="test batch size")    parser.add_argument('--lr', type=float, default=0.01, help="learning rate")    parser.add_argument('--momentum', type=float, default=0.5, help="SGD momentum (default: 0.5)")    parser.add_argument('--weight_decay', type=float, default=1e-3, help="weight_decay")    parser.add_argument('--model', type=str, default='LeNet', help='model name')    parser.add_argument('--dataset', type=str, default='cinic10', help="name of dataset")    parser.add_argument('--algorithm', type=str, default='FedAvg', help="name of algorithm")    parser.add_argument('--rule', type=str, default='Drichlet', help='distribution rule, iid, ill, Drichlet')    parser.add_argument('--ill_case', type=int, default=1, help='non-iid case (1,2,3,4)')    parser.add_argument('--Drichlet_arg', type=float, default=0.1, help='Drichlet_arg')    parser.add_argument('--num_classes', type=int, default=10, help="number of classes")    parser.add_argument('--num_channels', type=int, default=3, help="number of channels of images")    parser.add_argument('--gpu', type=int, default=0, help="GPU ID, -1 for CPU")    parser.add_argument('--prox_alpha', type=float, default=0.01, help="alpha for FedProx, 1e-1, 1e-2, 1e-3, 1e-4")    parser.add_argument('--contrastive_alpha', type=float, default=0.1, help='The hypterparameter for the Moon')    parser.add_argument('--temperature', type=float, default=0.5, help='the temperature parameter for contrastive loss')    parser.add_argument('--model_buffer_size', type=int, default=1, help='store how many previous models for contrastive loss')    parser.add_argument('--T', type=float, default=60.0, help="value of T")    parser.add_argument('--threshold', type=float, default=0.8, help="value of T")    args = parser.parse_args()    return argsif __name__ == "__main__":    p = args_parser()