import argparsedef args_parser():    parser = argparse.ArgumentParser()    # federated arguments    parser.add_argument('--epochs', type=int, default=100, help="round of training")    parser.add_argument('--num_users', type=int, default=100, help="number of users")    parser.add_argument('--frac', type=float, default=0.1, help="the fraction of clients")    parser.add_argument('--local_ep', type=int, default=5, help="the number of local epochs")    parser.add_argument('--local_bs', type=int, default=50, help="local batch size")    parser.add_argument('--bs', type=int, default=128, help="test batch size")    parser.add_argument('--lr', type=float, default=0.01, help="learning rate")    parser.add_argument('--momentum', type=float, default=0.5, help="SGD momentum (default: 0.5)")    # model arguments    parser.add_argument('--model', type=str, default='mlp', help='model name')    # other arguments    parser.add_argument('--algorithm', type=str, default='FedAvg', help="name of algorithm")    parser.add_argument('--dataset', type=str, default='cifar10', help="name of dataset")    parser.add_argument('--iid', action='store_true', help='whether i.i.d or not')    parser.add_argument('--noniid_case', type=int, default=1, help='non-iid case (1,2,3,4,5)')    parser.add_argument('--num_classes', type=int, default=10, help="number of classes")    parser.add_argument('--num_channels', type=int, default=3, help="number of channels of images")    parser.add_argument('--gpu', type=int, default=0, help="GPU ID, -1 for CPU")    parser.add_argument('--prox_alpha', type=float, default=0.01, help='the hypterparameter of FedProx')    parser.add_argument('--data_alpha', type=float, default=0.5, help='the parameter of dirichlet distribution')    parser.add_argument('--lr_g', type=float, default=1, help='global learning rate for Scaffold')    parser.add_argument('--pool_option', type=str, default='FIFO', help='FIFO or BOX')    parser.add_argument('--contrastive_alpha', type=float, default=0.1, help='The hypter parameter for the Moon')    parser.add_argument('--temperature', type=float, default=0.5, help='the temperature parameter for contrastive loss')    parser.add_argument('--model_buffer_size', type=int, default=1,                        help='store how many previous models for contrastive loss')    args = parser.parse_args()    return args