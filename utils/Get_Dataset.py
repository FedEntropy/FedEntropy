from torchvision import datasets, transformsfrom utils.FEMNIST import FEMNISTfrom utils.sampling import *from utils import mydatadef get_dataset(args):    if args.dataset == "mnist":        trans_mnist = transforms.Compose([transforms.ToTensor(), transforms.Normalize((0.1307,), (0.3081,))])        dataset_train = datasets.MNIST('data/mnist', train=True, download=True, transform=trans_mnist)        dataset_test = datasets.MNIST('data/mnist', train=False, download=True, transform=trans_mnist)        if args.iid:            dict_users = mnist_iid(dataset_train, args)        else:            dict_users = mnist_noniid(dataset_train, args)    elif args.dataset == "cifar10":        trans_cifar10 = transforms.Compose(            [transforms.ToTensor(), transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])        dataset_train = datasets.CIFAR10('data/cifar10', train=True, download=True, transform=trans_cifar10)        dataset_test = datasets.CIFAR10('data/cifar10', train=False, download=True, transform=trans_cifar10)        if not args.iid:            dict_users = cifar10_noniid(dataset_train, args)        else:            dict_users = cifar10_iid(dataset_train, args)    elif args.dataset == "cifar100":        # trans_cifar100_train = transforms.Compose([transforms.RandomCrop(32, padding=4),        #                                            transforms.RandomHorizontalFlip(),        #                                            transforms.ToTensor(),        #                                            transforms.Normalize(mean=[0.507, 0.487, 0.441],        #                                                                 std=[0.267, 0.256, 0.276])])        # trans_cifar100_val = transforms.Compose([transforms.ToTensor(),        #                                          transforms.Normalize(mean=[0.507, 0.487, 0.441],        #                                                               std=[0.267, 0.256, 0.276])])        # dataset_train = datasets.CIFAR100('data/cifar100', train=True, download=True, transform=trans_cifar100_train)        # dataset_test = datasets.CIFAR100('data/cifar100', train=False, download=True, transform=trans_cifar100_val)        trans_cifar100 = transforms.Compose(            [transforms.ToTensor(), transforms.Normalize((0.4914, 0.4822, 0.4465), (0.2023, 0.1994, 0.2010))])        dataset_train = mydata.CIFAR100_coarse('data/cifar100_coarse', train=True, download=True,                                               transform=trans_cifar100)        dataset_test = mydata.CIFAR100_coarse('data/cifar100_coarse', train=False, download=True,                                              transform=trans_cifar100)        if args.iid:            dict_users = cifar100_iid(dataset_train, args)        else:            dict_users = cifar100_noniid(dataset_train, args)    elif args.dataset == "femnist":        dataset_train = FEMNIST(True)        dataset_test = FEMNIST(False)        dict_users = dataset_train.get_client_dic()        args.num_users = len(dict_users)    elif args.dataset == "fashion-mnist":        trans = transforms.Compose([transforms.ToTensor()])        dataset_train = datasets.FashionMNIST('data/fashion-mnist', train=True, download=True, transform=trans)        dataset_test = datasets.FashionMNIST('data/fashion-mnist', train=False, download=True, transform=trans)        if args.iid:            dict_users = fashion_mnist_iid(dataset_train, args)        else:            dict_users = fashion_mnist_noniid(dataset_train, args)    elif args.dataset == "imagenet":        trans_imagenet_train = transforms.Compose(            [transforms.ToTensor(), transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])        trans_imagenet_test = transforms.Compose(            [transforms.ToTensor(), transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])        dataset_train = datasets.ImageFolder('data/tiny-imagenet-200/train/', transform=trans_imagenet_train)        dataset_test = datasets.ImageFolder('data/tiny-imagenet-200/val/', transform=trans_imagenet_test)        if not args.iid:            dict_users = imagenet_noniid(dataset_train, args)    elif args.dataset == 'cinic10':        trans_cinic10 = transforms.Compose(            [transforms.ToTensor(), transforms.Normalize(mean=[0.47889522, 0.47227842, 0.43047404], std=[0.24205756, 0.23828046, 0.25874835])])        dataset_train = datasets.ImageFolder('data/cinic10/train', transform=trans_cinic10)        dataset_test = datasets.ImageFolder('data/cinic10/test', transform=trans_cinic10)        if not args.iid:            dict_users = cinic10_noniid(dataset_train, args)    else:        print("Error: unrecognized dataset")    return dataset_train, dataset_test, dict_users